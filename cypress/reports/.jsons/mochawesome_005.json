{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2024-06-27T10:09:29.983Z",
    "end": "2024-06-27T10:09:30.406Z",
    "duration": 423,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a0f116ae-3a1e-49b1-9909-2c3185ce8dd6",
      "title": "",
      "fullFile": "cypress\\e2e\\createUser.cy.js",
      "file": "cypress\\e2e\\createUser.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d6bf3700-964c-4be9-abe8-28b941837f5b",
          "title": "Testing create_user API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC_001_Create_User_with_valid_data",
              "fullTitle": "Testing create_user API TC_001_Create_User_with_valid_data",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('createUser').then(function (userData) {\n  this.userData = userData;\n  cy.request({\n    method: 'POST',\n    url: '/api/createUser',\n    body: this.userData.userData1\n  }).then(response => {\n    expect(response.status).to.eq(201);\n    expect(response.body.success).to.be.true;\n    expect(response.body.message).to.equal('User created successfully');\n    expect(response.body).to.have.property('id');\n  });\n});",
              "err": {},
              "uuid": "7fe857ae-0a18-4354-8543-9ac7237b30bd",
              "parentUUID": "d6bf3700-964c-4be9-abe8-28b941837f5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC_002_Create_Second_User_with_valid_data",
              "fullTitle": "Testing create_user API TC_002_Create_Second_User_with_valid_data",
              "timedOut": null,
              "duration": 32,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('createUser').then(function (userData) {\n  this.userData = userData;\n  cy.request({\n    method: 'POST',\n    url: '/api/createUser',\n    body: this.userData.userData2\n  }).then(response => {\n    expect(response.status).to.eq(201);\n    expect(response.body.success).to.be.true;\n    expect(response.body.message).to.equal('User created successfully');\n    expect(response.body).to.have.property('id');\n  });\n});",
              "err": {},
              "uuid": "b91c25bb-b428-4c16-b74d-a426e8ef8802",
              "parentUUID": "d6bf3700-964c-4be9-abe8-28b941837f5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC_003_Create_User_with_Missing_Argument",
              "fullTitle": "Testing create_user API TC_003_Create_User_with_Missing_Argument",
              "timedOut": null,
              "duration": 38,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('createUser').then(function (userData) {\n  this.userData = userData;\n  cy.request({\n    method: 'POST',\n    url: '/api/createUser',\n    body: this.userData.userData3,\n    failOnStatusCode: false\n  }).then(response => {\n    expect(response.status).to.eq(400);\n    expect(response.body.success).to.be.false;\n    expect(response.body.message).contains(\"Missing required arguments\");\n  });\n});",
              "err": {},
              "uuid": "202be03a-eca8-426b-8cc8-5764216dab6d",
              "parentUUID": "d6bf3700-964c-4be9-abe8-28b941837f5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC_004_Create_User_with_Empty_Payload",
              "fullTitle": "Testing create_user API TC_004_Create_User_with_Empty_Payload",
              "timedOut": null,
              "duration": 35,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('createUser').then(function (userData) {\n  this.userData = userData;\n  cy.request({\n    method: 'POST',\n    url: '/api/createUser',\n    body: this.userData.userData4,\n    failOnStatusCode: false\n  }).then(response => {\n    expect(response.status).to.eq(400);\n    expect(response.body.success).to.be.false;\n    expect(response.body.message).to.equal('Phone number must be equal to 10 characters');\n  });\n});",
              "err": {},
              "uuid": "2edd1ae8-64b4-401d-836e-6d5e4e5e896a",
              "parentUUID": "d6bf3700-964c-4be9-abe8-28b941837f5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC_005_Validating_Create_User_API_Response_Time",
              "fullTitle": "Testing create_user API TC_005_Validating_Create_User_API_Response_Time",
              "timedOut": null,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('createUser').then(function (userData) {\n  this.userData = userData;\n  cy.request({\n    method: 'POST',\n    url: '/api/createUser',\n    body: this.userData.userData5,\n    failOnStatusCode: false\n  }).then(response => {\n    expect(response.status).to.eq(201);\n    expect(response.body.success).to.be.true;\n    expect(response.duration).to.be.lessThan(2000);\n  });\n});",
              "err": {},
              "uuid": "a57a0200-dc61-4d0a-b421-98626845b526",
              "parentUUID": "d6bf3700-964c-4be9-abe8-28b941837f5b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7fe857ae-0a18-4354-8543-9ac7237b30bd",
            "b91c25bb-b428-4c16-b74d-a426e8ef8802",
            "202be03a-eca8-426b-8cc8-5764216dab6d",
            "2edd1ae8-64b4-401d-836e-6d5e4e5e896a",
            "a57a0200-dc61-4d0a-b421-98626845b526"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 267,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\reports\\.jsons",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}