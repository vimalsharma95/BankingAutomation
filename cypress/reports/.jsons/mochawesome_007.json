{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-06-27T10:09:36.591Z",
    "end": "2024-06-27T10:09:36.810Z",
    "duration": 219,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0a5a8abf-f4c7-43d5-b6d3-6e6f1666c4c7",
      "title": "",
      "fullFile": "cypress\\e2e\\getBalance.cy.js",
      "file": "cypress\\e2e\\getBalance.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "40be1f67-83d3-4427-8b86-d9b2d317b965",
          "title": "Testing withdraw API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "TC_001_Check_Balance_For_Valid_User",
              "fullTitle": "Testing withdraw API TC_001_Check_Balance_For_Valid_User",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('getBalance').then(function (userData) {\n  this.userData = userData;\n  cy.request({\n    method: 'GET',\n    url: '/api/get_balance',\n    qs: this.userData.userData1\n  }).then(response => {\n    expect(response.status).to.eq(200);\n    expect(response.body.success).to.be.true;\n    expect(response.body).to.have.property('balance');\n  });\n});",
              "err": {},
              "uuid": "a127109b-7f78-472d-a469-976ba6d815a7",
              "parentUUID": "40be1f67-83d3-4427-8b86-d9b2d317b965",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC_002_Check_Balance_For_Invalid_User",
              "fullTitle": "Testing withdraw API TC_002_Check_Balance_For_Invalid_User",
              "timedOut": null,
              "duration": 28,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('getBalance').then(function (userData) {\n  this.userData = userData;\n  cy.request({\n    method: 'GET',\n    url: '/api/get_balance',\n    qs: this.userData.userData2,\n    failOnStatusCode: false\n  }).then(response => {\n    expect(response.status).to.eq(404);\n    expect(response.body.success).to.be.false;\n    expect(response.body.message).to.eq('User not found');\n  });\n});",
              "err": {},
              "uuid": "8e4e801b-ce97-454b-a9ac-a95a5b06f2cf",
              "parentUUID": "40be1f67-83d3-4427-8b86-d9b2d317b965",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "TC_003_Check_Balance_Without_QueryPaameter",
              "fullTitle": "Testing withdraw API TC_003_Check_Balance_Without_QueryPaameter",
              "timedOut": null,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture('getBalance').then(function (userData) {\n  this.userData = userData;\n  cy.request({\n    method: 'GET',\n    url: '/api/get_balance',\n    qs: this.userData.userData3,\n    failOnStatusCode: false\n  }).then(response => {\n    expect(response.status).to.eq(404);\n    expect(response.body.success).to.be.false;\n    expect(response.body.message).to.eq('User not found');\n  });\n});",
              "err": {},
              "uuid": "1056c829-718b-4192-ab72-c97cf6d3371a",
              "parentUUID": "40be1f67-83d3-4427-8b86-d9b2d317b965",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a127109b-7f78-472d-a469-976ba6d815a7",
            "8e4e801b-ce97-454b-a9ac-a95a5b06f2cf",
            "1056c829-718b-4192-ab72-c97cf6d3371a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 124,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress\\reports\\.jsons",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}